

This text file contains all relevant function descriptions in the "Zip Library".


B4PDOCU.START


"zip compress" :
{
	"Function Names":	[ "zip compress" ],
	"Documentation":	"Function Description",
	"Library":		"Zip Library",
	"Description"::

		This function compresses a file or directory with all the contents into a ZIP file.
	+++,
	"Call as":		"procedure",
	"Parameter count":	"1-3",
	"Restrictions":		"Under normal conditions, the 'Zip Library' is loaded automatically, so no 'include(...)' call is needed.",
	"Parameters":
	[
		{ "Number": "1.",
		  "Name": "Source path name",
		  "Direction": "input",
		  "Types": [ "literal" ],
		  "Description"::
			Choice of file or directory name.  If directory name is chosen, then the whole directory with all contents will be compressed.
			__Wildcards__ e.g. (pictures\*.jpg)  are allowed. In this case, 2nd parameter (Archive file name) is also required to provide a concrete archive name.
			+++
		},
		{ "Number": "Opt. 2.",
		  "Name": "Archive file name",
		  "Direction": "input",
		  "Types": [ "literal" ],
		  "Description"::
			A dedicated archive file name is required if the 1st parameter does not specifcy a dedicated file or directory (with files inside), but to
			multiple files or directories (using wildcard symbols).
			+++
		},
		{ "Number": "Opt. 3.",
		  "Name": "Archive format",
		  "Direction": "input",
		  "Types": [ "literal" ],
		  "Description"::
			One of the following: <b>zip</b> and <b>7z<b> (latter applies for 7-Zip and is supported under Windows only. Will be rejected under other operating systems").
			+++
		}
	],
	"Examples"::
		include( Support Library );
		include( Zip Library );

		zip compress( "Examples\Cities.csv" );
		zip compress( "Examples\*.csv", "All csv.zip" );

		a[] = search files( "*.zip" );
		echo("Found following ZIP files: ", a[]);

		zip extract all( "All csv.zip" );

		echo("List the extracted contents from 'All csv.zip':", new line);
		directory listing recursive( d, "All csv" );
		table keep columns( d, 'Path,Name,Date Created,Directory,Size' );
		table list( d );

		directory delete recursive ( "", "All csv" );
		file delete( "All csv.zip" );
		file delete( "Cities.zip" );
	+++,
	"Output": "automatic",
	"See also": [ "zip extract files", "zip extract all" ]
},


"zip extract files" :
{
	"Function Names":	[ "zip extract files" ],
	"Documentation":	"Function Description",
	"Library":		"Zip Library",
	"Description"::

		This function extracts one or more files from the ZIP file.
		No exceptions are asserted in case a specified file has not been found in the archive.  If needed, check If the extracted file is existing after calling this function.

	+++,
	"Call as":		"procedure",
	"Parameter count":	"2-3",
	"Restrictions":		"Under normal conditions, the 'Zip Library' is loaded automatically, so no 'include(...)' call is needed.",
	"Parameters":
	[
		{ "Number": "1.",
		  "Name": "Archive file name",
		  "Direction": "input",
		  "Types": [ "literal" ],
		  "Description"::
			Choice of file or directory name.  If directory name is chosen, then the whole directory with all contents will be compressed.
			__Wildcards__ e.g. (pictures\*.jpg)  are allowed. In this case, 2nd parameter (Archive file name) is also required to provide a concrete archive name.
			+++
		},
		{ "Number": "2.",
		  "Name": "Content file names",
		  "Direction": "input",
		  "Types": [ "parameter set or literal" ],
		  "Description"::
			Specify all files to extract:
			* Use literal type to specify 1 file.
			* Use aparameter set to specify multiple files
			* Alternatively use softquoted literal (with single quotation marks) with file names spearated by comam to specify multiple files.
			+++
		},
		{ "Number": "Opt. 3.",
		  "Name": "Target directory name",
		  "Direction": "input",
		  "Types": [ "literal" ],
		  "Default value": "(current working directory)",
		  "Description"::
			Specify the directory where the extracted files shall be copied to. 
			+++
		}
	],
	"Examples"::
		include( Support Library );
		include( Zip Library );

		zip compress( "Examples\*.csv", "All csv.zip" );
		zip extract files( "All csv.zip", "Examples\Cities.csv", "My Dir" );

		echo("List the extracted file from 'All csv.zip':", new line);
		directory listing recursive( d, "My Dir" );
		table keep columns( d, 'Path,Name,Date Created,Directory,Size' );
		table list( d );

		directory delete recursive ( "", "My Dir" );
		file delete( "All csv.zip" );
	+++,
	"Output": "automatic",
	"See also": [ "zip extract all", "zip compress" ]
},

"zip extract all" :
{
	"Function Names":	[ "zip extract all" ],
	"Documentation":	"Function Description",
	"Library":		"Zip Library",
	"Description"::
		Extracts the whole archive and stores the contents in a dedicated directory.
		The directory structure depicted in the archive will be used to build up the necessary structure in the target directory.
	+++,
	"Call as":		"procedure",
	"Parameter count":	"1-2",
	"Restrictions":		"Under normal conditions, the 'Zip Library' is loaded automatically, so no 'include(...)' call is needed.",
	"Parameters":
	[
		{ "Number": "1.",
		  "Name": "Archive file name",
		  "Direction": "input",
		  "Types": [ "literal" ],
		  "Description"::
			Choice of file or directory name.  If directory name is chosen, then the whole directory with all contents will be compressed.
			__Wildcards__ e.g. (pictures\*.jpg)  are allowed. In this case, 2nd parameter (Archive file name) is also required to provide a concrete archive name.
			+++
		},
		{ "Number": "Opt. 2.",
		  "Name": "Target directory name",
		  "Direction": "input",
		  "Types": [ "literal" ],
		  "Default value": "(current working directory)",
		  "Description"::
			Specify the directory where the extracted files shall be copied to. 
			+++
		}
	],
	"Examples"::
		include( Support Library );
		include( Zip Library );

		zip compress( "Examples\*.csv", "All csv.zip" );
		zip extract all( "All csv.zip", "My Dir" );

		echo("List the extracted file from 'All csv.zip':", new line);
		directory listing recursive( d, "My Dir" );
		table keep columns( d, 'Path,Name,Date Created,Directory,Size' );
		table list( d );

		directory delete recursive ( "", "My Dir" );
		file delete( "All csv.zip" );
	+++,
	"Output": "automatic",
	"See also": [ "zip extract files", "zip compress" ]
}





B4PDOCU.STOP
